{"version":3,"sources":["../../src/util/get-response-body.util.js","../../src/util/noop.util.js","../../src/index.js","services/services.config.js","services/generate-url-query-string.util.js","services/users.service.js","store/actions/user-list.actions.js","store/actions/selected-user.actions.js","components/UserListItem.component.js","components/UserList.component.js","App.js","store/reducers/user-list.reducer.js","store/reducers/selected-user.reducer.js","store/reducers/root.reducer.js","store/index.js","index.js"],"names":["getResponseBody","a","resp","Headers","MimeTypes","noop","noopThunk","DEFAULT_OPTIONS","onServiceStartAction","onErrorAction","onFinallyAction","responseBodyDataKey","generateReqError","Error","serviceMethodThunk","resultAction","options","error","dispatch","respBody","setStatePromise","console","CONTENT_TYPE","ACCEPT","APPLICATION_JSON","Application","JSON","DEFAULT_SERVICE_HEADERS","generateUrlQueryString","searchParams","URLSearchParams","serviceBaseUri","getUsers","fetch","headers","getUserById","id","userListSetState","list","type","setSelectedUser","user","UserListItem","useDispatch","avatar","fullName","email","ListItem","ListItemAvatar","Avatar","alt","src","ListItemText","primary","Link","href","onClick","ev","preventDefault","serviceDispatcher","fetchSelectedUser","secondary","Typography","component","variant","UserList","userList","useSelector","useEffect","fetchUserList","p","l","length","Paper","List","map","key","SelectedUser","selectedUser","birthDate","streetAddress","streetSuffix","city","state","zip","Card","CardHeader","title","subheader","action","IconButton","CardContent","birthday","ageDifMs","Date","now","ageDate","Math","abs","getUTCFullYear","calculateAge","fontWeight","useAppStyles","makeStyles","theme","root","margin","spacing","App","classes","Box","className","Grid","container","item","xs","sm","INIT_STATE","userListReducer","createReducer","selectedUserReducer","combineReducers","middlewares","logger","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","darkTheme","createMuiTheme","palette","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.e45b3d82.chunk.js","sourcesContent":["import {Headers, MimeTypes} from 'http-headers-js'\n\nexport const getResponseBody = async resp => resp\n  .headers\n  .get(Headers.CONTENT_TYPE)\n  .includes(MimeTypes.Application.JSON) ?\n    await resp.json() : await resp.text()\n","const noop = () => {}\nexport default noop\n\nexport const noopThunk = () => noop\n\nexport const noopAction = () => ({type: 'NOOP'})\n","import {getResponseBody} from './util/get-response-body.util'\nimport noop, { noopThunk } from './util/noop.util'\n\nconst DEFAULT_OPTIONS = {\n  onServiceStartAction: noopThunk,\n  onErrorAction: noopThunk,\n  onFinallyAction: noopThunk,\n  responseBodyDataKey: '',\n  generateReqError: (resp) => new Error(`Request failed: ${resp.status}`)\n}\n\nexport const serviceDispatcher = (\n  serviceMethodThunk = noop,\n  resultAction = noop,\n  options = {}\n) => async dispatch => {\n  const {\n    onServiceStartAction,\n    onErrorAction,\n    onFinallyAction,\n    responseBodyDataKey,\n    generateReqError\n  } = {\n    ...DEFAULT_OPTIONS,\n    ...options\n  }\n  let error = undefined\n  let setStatePromise\n  dispatch(onServiceStartAction())\n  try {\n    const resp = await serviceMethodThunk()\n    if (!resp.ok) {\n      throw await generateReqError(resp)\n    }\n    const respBody = await getResponseBody(resp)\n\n    setStatePromise = resultAction && await dispatch(resultAction(\n      respBody[responseBodyDataKey] || respBody\n    ))\n  } catch (err) {\n    error = err\n    console.error(err)\n    dispatch(onErrorAction(err))\n  } finally {\n    dispatch(onFinallyAction())\n  }\n  return error || setStatePromise\n}\n\nexport default serviceDispatcher\n","import {Headers, MimeTypes} from 'http-headers-js'\nconst {CONTENT_TYPE, ACCEPT} = Headers\nconst {Application: {JSON: APPLICATION_JSON}} = MimeTypes\n\nexport const SERVICES_BASE_URI = 'https://60cbec2a21337e0017e45845.mockapi.io'\nexport const DEFAULT_SERVICE_HEADERS = {\n  [ACCEPT]: APPLICATION_JSON,\n  [CONTENT_TYPE]: APPLICATION_JSON,\n}\n","export const generateUrlQueryString = searchParams => searchParams ?\n  `?${new URLSearchParams(searchParams)}` : \"\";\n","import { DEFAULT_SERVICE_HEADERS, SERVICES_BASE_URI } from \"./services.config\";\nimport { generateUrlQueryString } from \"./generate-url-query-string.util\";\n\nconst serviceBaseUri = `${SERVICES_BASE_URI}/users`\n\nexport const getUsers = (\n  searchParams = {}\n) => async () => fetch(\n  `${serviceBaseUri}${generateUrlQueryString(searchParams)}`,\n  {\n    headers: DEFAULT_SERVICE_HEADERS\n  }\n)\n\nexport const getUserById = (\n  id,\n  searchParams = {}\n) => async () => fetch(\n  `${serviceBaseUri}/${id}${generateUrlQueryString(searchParams)}`,\n  {\n    headers: DEFAULT_SERVICE_HEADERS\n  }\n)\n","import serviceDispatcher from 'redux-thunk-service-dispatcher'\nimport { getUsers } from '../../services/users.service'\nexport const USER_LIST_SET_STATE = 'USER_LIST_SET_STATE'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const userListSetState = list => ({\n  type: USER_LIST_SET_STATE,\n  list\n})\n\nexport const userListResetState = () => ({\n  type: USER_LIST_RESET\n})\n\nexport const fetchUserList = (\n  searchParams = {}\n) => async dispatch =>\n  dispatch(\n    serviceDispatcher(\n      getUsers(searchParams),\n      userListSetState\n    )\n  )\n","import serviceDispatcher from 'redux-thunk-service-dispatcher'\nimport { getUserById } from '../../services/users.service'\n\nexport const SELECTED_USER_SET = 'SELECTED_USER_SET'\nexport const SELECTED_USER_CLEAR = 'SELECTED_USER_CLEAR'\n\nexport const setSelectedUser = user => ({\n  type: SELECTED_USER_SET,\n  user\n})\n\nexport const clearSelectedUser = () => ({\n  type: SELECTED_USER_CLEAR\n})\n\nexport const fetchSelectedUser = id => async dispatch =>\n  dispatch(\n    serviceDispatcher(\n      getUserById(id),\n      setSelectedUser\n    )\n  )\n","import { Avatar, Link, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { fetchSelectedUser } from '../store/actions/selected-user.actions'\n\nexport const UserListItem = ({\n  user = {}\n}) => {\n  const dispatch = useDispatch()\n  const {\n    avatar,\n    fullName,\n    email,\n    id\n  } = user\n\n  const onClick = id => ev => {\n    ev.preventDefault()\n    dispatch(fetchSelectedUser(id))\n  }\n\n  return <ListItem {...{}}>\n    <ListItemAvatar {...{}}>\n      <Avatar {...{\n        alt: fullName,\n        src: avatar\n      }} />\n    </ListItemAvatar>\n    <ListItemText {...{\n      primary: <Link {...{\n        href: '',\n        onClick: onClick(id)\n      }}>{fullName}</Link>,\n      secondary: <Typography {...{\n        component: 'span',\n        variant: 'body2'\n      }}>\n        {email}\n      </Typography>\n    }} />\n  </ListItem>\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport React, { useEffect } from 'react'\nimport { fetchUserList } from '../store/actions/user-list.actions'\nimport { List, Paper, Typography } from '@material-ui/core'\nimport { UserListItem } from './UserListItem.component'\n\nexport const UserList = () => {\n  const dispatch = useDispatch()\n  const {\n    userList\n  } = useSelector(\n    ({ userList }) => ({ userList })\n  )\n\n  useEffect(() => {\n    dispatch(\n      fetchUserList({\n        p: 1,\n        l: 10\n      })\n    )\n  }, [])\n\n  return userList?.length ?\n    <Paper>\n      <List {...{}}>\n        {\n          userList.map(\n            (user, key) => <UserListItem {...{\n              key,\n              user\n            }} />\n          )\n        }\n      </List>\n    </Paper> :\n    <Typography>Loading users...</Typography>\n}\n","import React from 'react'\nimport 'redux-thunk-service-dispatcher/dist/index.css'\nimport { UserList } from './components/UserList.component'\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Grid,\n  IconButton,\n  Link,\n  makeStyles,\n  Typography\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { clearSelectedUser } from './store/actions/selected-user.actions'\n\nconst SelectedUser = () => {\n  const dispatch = useDispatch()\n  const {\n    selectedUser: {\n      id,\n      avatar,\n      email,\n      fullName,\n      birthDate,\n      streetAddress,\n      streetSuffix,\n      city,\n      state,\n      zip,\n    }\n  } = useSelector(\n    ({selectedUser}) => ({\n      selectedUser\n    })\n  )\n\n  const getAddressLine1 = () => `${streetAddress} ${streetSuffix}`\n  const getAddressLine2 = () => `${city} ${state} ${zip}`\n\n  const handleCloseOnClick = () =>\n    dispatch(clearSelectedUser())\n\n  const calculateAge = birthday => {\n    const ageDifMs = Date.now() - birthday\n    const ageDate = new Date(ageDifMs)\n    return Math.abs(ageDate.getUTCFullYear() - 1970)\n  }\n\n  return id ? <Card>\n    <CardHeader {...{\n      avatar: <Avatar {...{\n        alt: fullName,\n        src: avatar\n      }} />,\n      title: fullName,\n      subheader: <Link {...{\n        href:`mailto:${email}`\n      }}>{email}</Link>,\n      action: <IconButton {...{\n        'aria-label': 'close',\n        onClick: handleCloseOnClick\n      }}>\n        <CloseIcon />\n      </IconButton>\n    }} />\n    <CardContent>\n      <Typography {...{\n        component: 'strong'\n      }}>Age:</Typography>\n      <Typography {...{\n      }}>{calculateAge(new Date(birthDate))}</Typography>\n      <Typography {...{\n        component: 'strong',\n        fontWeight: 'bold'\n      }}>Address:</Typography>\n      <Typography>\n        {getAddressLine1()}\n      </Typography>\n      <Typography>\n        {getAddressLine2()}\n      </Typography>\n    </CardContent>\n  </Card> :\n  <Typography>Please select a user...</Typography>\n}\n\nconst useAppStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(2)\n  }\n}))\n\nconst App = () => {\n  const classes = useAppStyles()\n  return <Box {...{\n    className: classes.root\n  }}>\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography {...{\n          variant: 'h5'\n        }}>Basic Usage:</Typography>\n      </Grid>\n      <Grid item sm={6} xs={12}>\n        <UserList />\n      </Grid>\n      <Grid item sm={6} xs={12}>\n        <SelectedUser />\n      </Grid>\n    </Grid>\n  </Box>\n}\n\nexport default App\n","import {createReducer} from \"redux-create-reducer\"\nimport { USER_LIST_RESET, USER_LIST_SET_STATE } from '../actions/user-list.actions'\n\nconst INIT_STATE = []\n\nexport const userListReducer = createReducer(INIT_STATE,{\n  [USER_LIST_SET_STATE]: (userList, {list}) => list,\n  [USER_LIST_RESET]: () => [...INIT_STATE]\n})\n","import { createReducer } from 'redux-create-reducer'\nimport { SELECTED_USER_CLEAR, SELECTED_USER_SET } from '../actions/selected-user.actions'\n\nconst INIT_STATE = {}\n\nexport const selectedUserReducer = createReducer(\n  {...INIT_STATE},\n  {\n    [SELECTED_USER_SET]: (selectedUser, {user}) => ({\n      ...user\n    }),\n    [SELECTED_USER_CLEAR]: () => ({\n      ...INIT_STATE\n    })\n  }\n)\n","import { combineReducers } from 'redux'\nimport { userListReducer } from './user-list.reducer'\nimport { selectedUserReducer } from './selected-user.reducer'\n\nexport default combineReducers({\n  userList: userListReducer,\n  selectedUser: selectedUserReducer\n})\n","import thunk from 'redux-thunk'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport rootReducer from './reducers/root.reducer'\nimport logger from 'redux-logger'\n\nconst middlewares = [logger, thunk]\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n  rootReducer,\n  {},\n  composeEnhancers(applyMiddleware(...middlewares))\n)\n\nexport default store\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { createMuiTheme, CssBaseline, ThemeProvider } from '@material-ui/core'\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n})\n\nReactDOM.render(\n  <Provider {...{store}}>\n    <ThemeProvider theme={darkTheme} >\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}